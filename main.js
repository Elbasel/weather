var n={941:(n,e,t)=>{t.d(e,{Z:()=>d});var A=t(537),a=t.n(A),o=t(645),i=t.n(o),r=t(667),s=t.n(r),c=new URL(t(591),t.b),l=i()(a());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@1,900&display=swap);"]);var p=s()(c);l.push([n.id,"html{box-sizing:border-box;font-size:14px}*,*:before,*:after{box-sizing:inherit;margin:0;padding:0}body,h1,h2,h3,h4,h5,h6,p,ol,ul{margin:0;padding:0;font-weight:normal;font-family:var(--main-font)}ol,ul{list-style:none}img{max-width:100%;height:auto}html{height:-webkit-fill-available}body{height:100vh;height:-webkit-fill-available;background-image:url("+p+");background-size:cover}@keyframes rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes fade-in{0%{opacity:0}100%{opacity:1}}@keyframes fade-out{0%{opacity:1}100%{opacity:0}}body{padding:32px;color:#fff}.add-page{animation:fade-in 1s;height:100%;width:100%;display:flex;flex-direction:column;gap:16px}.add-page h1{margin-left:10px}.add-page .cities{flex:1;height:100%;display:flex;flex-direction:column;gap:16px}.add-page .cities .city{padding:16px;background-color:rgba(21,21,138,.507);border-radius:24px;display:flex;align-items:center;justify-content:space-between;font-size:3rem}form .head{display:flex;align-items:center;gap:20px;position:relative}form .head input{flex:1;padding:16px;padding-left:60px;border-radius:24px;font-size:1.3rem;color-scheme:dark}form .head #search-icon{position:absolute;z-index:2;left:20px}form svg{width:30px}.error-div{padding:16px;position:absolute;border-radius:24px;color:#fff;position:absolute;background-color:red;left:60%;animation:fade-out 5s}","",{version:3,sources:["webpack://./src/styles/reset.css","webpack://./src/styles/base.scss","webpack://./src/styles/animations.scss","webpack://./src/styles/addCityPage.scss"],names:[],mappings:"AAAA,KACI,qBAAA,CACA,cAAA,CAIJ,mBAGI,kBAAA,CACA,QAAA,CACA,SAAA,CAGJ,+BAUI,QAAA,CACA,SAAA,CACA,kBAAA,CACA,4BAAA,CAGJ,MAEI,eAAA,CAGJ,IACI,cAAA,CACA,WAAA,CC1BJ,KACI,6BAAA,CAGJ,KACI,YAAA,CACA,6BAAA,CACA,wDAAA,CACA,qBAAA,CCnBJ,kBACI,GACI,sBAAA,CAGJ,KACI,wBAAA,CAAA,CAIR,mBACI,GACI,SAAA,CAEJ,KACI,SAAA,CAAA,CAIR,oBACI,GACI,SAAA,CAGJ,KACI,SAAA,CAAA,CCtBR,KACI,YAAA,CACA,UAAA,CAGJ,UACI,oBAAA,CACA,WAAA,CACA,UAAA,CAEA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,aACI,gBAAA,CAGJ,kBACI,MAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,wBACI,YAAA,CACA,qCAAA,CACA,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,cAAA,CAKR,WACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,iBAAA,CAEA,iBACI,MAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,gBAAA,CAGA,iBAAA,CAGJ,wBACI,iBAAA,CACA,SAAA,CACA,SAAA,CAKR,SACI,UAAA,CAGR,WACI,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,UAAA,CACA,iBAAA,CACA,oBAAA,CACA,QAAA,CACA,qBAAA",sourcesContent:["html {\n    box-sizing: border-box;\n    font-size: 14px;\n    /* color-scheme: dark; */\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nol,\nul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-family: var(--main-font);\n}\n\nol,\nul {\n    list-style: none;\n}\n\nimg {\n    max-width: 100%;\n    height: auto;\n}\n","@use 'reset.css';\n\n@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@1,900&display=swap');\n\n$primary-dark: #181a1b;\n$secondary-dark: #2b2f31;\n$dark-blue: #004daa;\n$text-white: #d8d4cf;\n$caption-white: #e8e6e3;\n$primary-font: 'Nunito', sans-serif;\n\nhtml {\n    height: -webkit-fill-available;\n}\n\nbody {\n    height: 100vh;\n    height: -webkit-fill-available;\n    background-image: url('../assets/night.jpg');\n    background-size: cover;\n}\n","@keyframes rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes fade-in {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n@keyframes fade-out {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        opacity: 0;\n    }\n}\n","@use './base.scss' as *;\n@use './animations.scss';\n\nbody {\n    padding: 32px;\n    color: white;\n}\n\n.add-page {\n    animation: fade-in 1s;\n    height: 100%;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n\n    h1 {\n        margin-left: 10px;\n    }\n\n    .cities {\n        flex: 1;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n\n        .city {\n            padding: 16px;\n            background-color: rgba(21, 21, 138, 0.507);\n            border-radius: 24px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            font-size: 3rem;\n        }\n    }\n}\nform {\n    .head {\n        display: flex;\n        align-items: center;\n        gap: 20px;\n        position: relative;\n\n        input {\n            flex: 1;\n            padding: 16px;\n            padding-left: 60px;\n            border-radius: 24px;\n            font-size: 1.3rem;\n            // background-color: grey;\n            // color: white;\n            color-scheme: dark;\n        }\n\n        #search-icon {\n            position: absolute;\n            z-index: 2;\n            left: 20px;\n            // color: black;\n        }\n    }\n\n    svg {\n        width: 30px;\n    }\n}\n.error-div {\n    padding: 16px;\n    position: absolute;\n    border-radius: 24px;\n    color: white;\n    position: absolute;\n    background-color: red;\n    left: 60%;\n    animation: fade-out 5s;\n}\n"],sourceRoot:""}]);const d=l},277:(n,e,t)=>{t.d(e,{Z:()=>C});var A=t(537),a=t.n(A),o=t(645),i=t.n(o),r=t(667),s=t.n(r),c=new URL(t(591),t.b),l=new URL(t(887),t.b),p=i()(a());p.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:ital,wght@1,900&display=swap);"]);var d=s()(c),m=s()(l);p.push([n.id,"html{box-sizing:border-box;font-size:14px}*,*:before,*:after{box-sizing:inherit;margin:0;padding:0}body,h1,h2,h3,h4,h5,h6,p,ol,ul{margin:0;padding:0;font-weight:normal;font-family:var(--main-font)}ol,ul{list-style:none}img{max-width:100%;height:auto}html{height:-webkit-fill-available}body{height:100vh;height:-webkit-fill-available;background-image:url("+d+');background-size:cover}@keyframes rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes fade-in{0%{opacity:0}100%{opacity:1}}@keyframes fade-out{0%{opacity:1}100%{opacity:0}}body{display:flex;padding:16px}.wrapper{flex:1;animation:fade-in 1s}.wrapper{color:#fff;padding:2px;font-family:"Nunito",sans-serif;font-size:16px;display:flex;flex-direction:column}.wrapper header{flex:1}.wrapper main{flex:5}.wrapper .forecast{flex:5}header{display:flex;justify-content:space-between;align-items:center}header h1{letter-spacing:2px}main{display:flex;justify-content:center;align-items:center}.weather{display:flex;flex-direction:column;text-align:center;position:relative;margin-right:30px}.weather h2{font-size:10rem}.weather .text{font-size:2rem;position:absolute;top:170px;left:45px;font-family:sans-serif;letter-spacing:2px}.weather .degree{position:absolute;font-size:3rem;bottom:100px;left:170px}button{width:10%;border:0;color:#fff;background-color:rgba(0,0,0,0);max-width:30px}.forecast{display:flex;flex-direction:column;justify-content:center;gap:16px;max-width:400px}.sun{background-color:#fce570;width:30px;height:30px;border-radius:50%}.row{max-height:30px;font-size:18px;display:grid;grid-template-columns:auto auto 1fr;align-items:center}.row .svg{background-size:cover;background-position:center;width:60px;height:60px;background-image:url('+m+");margin-left:-20px}.temp{text-align:end}.refresh{position:absolute;left:48%;top:80px}.refresh svg{width:30px}","",{version:3,sources:["webpack://./src/styles/reset.css","webpack://./src/styles/base.scss","webpack://./src/styles/animations.scss","webpack://./src/styles/home.scss"],names:[],mappings:"AAAA,KACI,qBAAA,CACA,cAAA,CAIJ,mBAGI,kBAAA,CACA,QAAA,CACA,SAAA,CAGJ,+BAUI,QAAA,CACA,SAAA,CACA,kBAAA,CACA,4BAAA,CAGJ,MAEI,eAAA,CAGJ,IACI,cAAA,CACA,WAAA,CC1BJ,KACI,6BAAA,CAGJ,KACI,YAAA,CACA,6BAAA,CACA,wDAAA,CACA,qBAAA,CCnBJ,kBACI,GACI,sBAAA,CAGJ,KACI,wBAAA,CAAA,CAIR,mBACI,GACI,SAAA,CAEJ,KACI,SAAA,CAAA,CAIR,oBACI,GACI,SAAA,CAGJ,KACI,SAAA,CAAA,CCtBR,KACI,YAAA,CACA,YAAA,CAGJ,SACI,MAAA,CACA,oBAAA,CAGJ,SACI,UAAA,CACA,WAAA,CACA,+BFPW,CEQX,cAAA,CACA,YAAA,CACA,qBAAA,CAGA,gBACI,MAAA,CAIJ,cACI,MAAA,CAIJ,mBACI,MAAA,CAKR,OACI,YAAA,CACA,6BAAA,CACA,kBAAA,CAEA,UACI,kBAAA,CAIR,KACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,SACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,YACI,eAAA,CAEJ,eACI,cAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,iBACI,iBAAA,CACA,cAAA,CACA,YAAA,CACA,UAAA,CAIR,OACI,SAAA,CACA,QAAA,CACA,UAAA,CACA,8BAAA,CACA,cAAA,CAGJ,UACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,QAAA,CACA,eAAA,CAGJ,KACI,wBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CAGJ,KACI,eAAA,CACA,cAAA,CACA,YAAA,CACA,mCAAA,CACA,kBAAA,CAEA,UACI,qBAAA,CACA,0BAAA,CACA,UAAA,CACA,WAAA,CACA,wDAAA,CACA,iBAAA,CAIR,MACI,cAAA,CAGJ,SAII,iBAAA,CACA,QAAA,CACA,QAAA,CALA,aACI,UAAA",sourcesContent:["html {\n    box-sizing: border-box;\n    font-size: 14px;\n    /* color-scheme: dark; */\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nol,\nul {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-family: var(--main-font);\n}\n\nol,\nul {\n    list-style: none;\n}\n\nimg {\n    max-width: 100%;\n    height: auto;\n}\n","@use 'reset.css';\n\n@import url('https://fonts.googleapis.com/css2?family=Nunito:ital,wght@1,900&display=swap');\n\n$primary-dark: #181a1b;\n$secondary-dark: #2b2f31;\n$dark-blue: #004daa;\n$text-white: #d8d4cf;\n$caption-white: #e8e6e3;\n$primary-font: 'Nunito', sans-serif;\n\nhtml {\n    height: -webkit-fill-available;\n}\n\nbody {\n    height: 100vh;\n    height: -webkit-fill-available;\n    background-image: url('../assets/night.jpg');\n    background-size: cover;\n}\n","@keyframes rotate {\n    0% {\n        transform: rotate(0deg);\n    }\n\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes fade-in {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n@keyframes fade-out {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        opacity: 0;\n    }\n}\n","@use './base.scss' as *;\n@use './animations.scss';\n\nbody {\n    display: flex;\n    padding: 16px;\n}\n\n.wrapper {\n    flex: 1;\n    animation: fade-in 1s;\n}\n\n.wrapper {\n    color: white;\n    padding: 2px;\n    font-family: $primary-font;\n    font-size: 16px;\n    display: flex;\n    flex-direction: column;\n    // align-items: center;\n\n    header {\n        flex: 1;\n        // border: $layout-border;\n    }\n\n    main {\n        flex: 5;\n        // border: $layout-border;\n    }\n\n    .forecast {\n        flex: 5;\n        // border: $layout-border;\n    }\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    h1 {\n        letter-spacing: 2px;\n    }\n}\n\nmain {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.weather {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    position: relative;\n    margin-right: 30px;\n\n    h2 {\n        font-size: 10rem;\n    }\n    .text {\n        font-size: 2rem;\n        position: absolute;\n        top: 170px;\n        left: 45px;\n        font-family: sans-serif;\n        letter-spacing: 2px;\n    }\n\n    .degree {\n        position: absolute;\n        font-size: 3rem;\n        bottom: 100px;\n        left: 170px;\n    }\n}\n\nbutton {\n    width: 10%;\n    border: 0;\n    color: white;\n    background-color: rgba(0, 0, 0, 0);\n    max-width: 30px;\n}\n\n.forecast {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 16px;\n    max-width: 400px;\n}\n\n.sun {\n    background-color: #fce570;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n}\n\n.row {\n    max-height: 30px;\n    font-size: 18px;\n    display: grid;\n    grid-template-columns: auto auto 1fr;\n    align-items: center;\n\n    .svg {\n        background-size: cover;\n        background-position: center;\n        width: 60px;\n        height: 60px;\n        background-image: url('../assets/icons/day.svg');\n        margin-left: -20px;\n    }\n}\n\n.temp {\n    text-align: end;\n}\n\n.refresh {\n    svg {\n        width: 30px;\n    }\n    position: absolute;\n    left: 48%;\n    top: 80px;\n}\n"],sourceRoot:""}]);const C=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(A)for(var r=0;r<this.length;r++){var s=this[r][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);A&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),o="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var o={},i=[],r=0;r<n.length;r++){var s=n[r],c=A.base?s[0]+A.base:s[0],l=o[c]||0,p="".concat(c," ").concat(l);o[c]=l+1;var d=t(p),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(m);else{var C=a(m,A);A.byIndex=r,e.splice(r,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=A(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var r=t(o[i]);e[r].references--}for(var s=A(n,a),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,a&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},887:(n,e,t)=>{n.exports=t.p+"c33ef66438b2725bead5.svg"},591:(n,e,t)=>{n.exports=t.p+"98a55a7ddf04bf9e039c.jpg"}},e={};function t(A){var a=e[A];if(void 0!==a)return a.exports;var o=e[A]={id:A,exports:{}};return n[A](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;if("string"==typeof import.meta.url&&(n=import.meta.url),!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var A={};(()=>{t.d(A,{Z:()=>T});const n='\n    <svg viewBox="0 0 24 24">\n    <path\n        fill="currentColor"\n        d="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"\n    />\n    </svg>',e='\n    <svg viewBox="0 0 24 24">\n    <path\n        fill="currentColor"\n    d="M17.65,6.35C16.2,4.9 14.21,4 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20C15.73,20 18.84,17.45 19.73,14H17.65C16.83,16.33 14.61,18 12,18A6,6 0 0,1 6,12A6,6 0 0,1 12,6C13.66,6 15.14,6.69 16.22,7.78L13,11H20V4L17.65,6.35Z"\n    />\n    </svg>',a='\n    <svg viewBox="0 0 24 24">\n    <path\n        fill="currentColor"\n        d="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"\n    />\n    </svg>',o='\n    <svg viewBox="0 0 24 24">\n    <path\n        fill="currentColor"\n        d="M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z"\n    />\n    </svg>',i='\n    <svg id="search-icon" viewBox="0 0 24 24">\n    <path\n        fill="currentColor"\n        d="M9.5,3A6.5,6.5 0 0,1 16,9.5C16,11.11 15.41,12.59 14.44,13.73L14.71,14H15.5L20.5,19L19,20.5L14,15.5V14.71L13.73,14.44C12.59,15.41 11.11,16 9.5,16A6.5,6.5 0 0,1 3,9.5A6.5,6.5 0 0,1 9.5,3M9.5,5C7,5 5,7 5,9.5C5,12 7,14 9.5,14C12,14 14,12 14,9.5C14,7 12,5 9.5,5Z"\n    />\n    </svg>';var r=t(379),s=t.n(r),c=t(795),l=t.n(c),p=t(569),d=t.n(p),m=t(565),C=t.n(m),u=t(216),f=t.n(u),g=t(589),h=t.n(g),x=t(277),b={};b.styleTagTransform=h(),b.setAttributes=C(),b.insert=d().bind(null,"head"),b.domAPI=l(),b.insertStyleElement=f(),s()(x.Z,b),x.Z&&x.Z.locals&&x.Z.locals;const y=function(t,A,o,i){const r=document.createElement("div");return r.className="wrapper",r.append(function(t){const A=document.createElement("header"),o=document.createElement("button");o.innerHTML=n,o.addEventListener("click",(()=>{T("addCityPage")}));const i=document.createElement("h1");i.textContent=t[0].toUpperCase()+t.slice(1);const r=document.createElement("button");r.className="refresh",r.innerHTML=e;const s=document.createElement("button");return s.innerHTML=a,s.addEventListener("click",(()=>{T("settingsPage")})),A.append(o,i,r,s),A}(t),function(n,e){const t=document.createElement("main");return t.append(function(){const t=document.createElement("div");t.className="weather";const A=document.createElement("h2");A.textContent=n;const a=document.createElement("p");a.className="degree",a.textContent="°C";const o=document.createElement("p");return o.className="text",o.textContent=e,t.append(A,a,o),t}()),t}(A,o),function(n,e,t){const A=document.createElement("div");function a(n,e,t){const A=document.createElement("div");A.className="row";const a=document.createElement("div");a.className="svg";const o=document.createElement("p");o.className="day",o.textContent=n;const i=document.createElement("p");return i.className="temp",i.textContent=`${e}° / ${t}°`,A.append(a,o,i),A}return A.className="forecast",A.append(a("Today",n.minTemp,n.maxTemp),a("Tomorrow",e.minTemp,e.maxTemp),a(function(){const n=new Date;return n.setDate(n.getDate()+2),n.toLocaleDateString("en-us",{weekday:"long"})}(),t.minTemp,t.maxTemp)),A}(i[0],i[1],i[2])),r};var v=t(941),w={};w.styleTagTransform=h(),w.setAttributes=C(),w.insert=d().bind(null,"head"),w.domAPI=l(),w.insertStyleElement=f(),s()(v.Z,w),v.Z&&v.Z.locals&&v.Z.locals;const B="4b1d3b381d9370cb1209f53b25b46f83",I=`https://api.openweathermap.org/data/2.5/weather?q=cityName&appid=${B}`,k=`https://api.openweathermap.org/data/2.5/forecast?q=cityName&appid=${B}`;async function E(n,...e){let t;if(document.body.innerHTML="","homepage"===n){e[0]&&localStorage.setItem("cityName",e[0]);let n=e[0]||localStorage.getItem("cityName");const A=await async function(n){let e=I.replace("cityName",n);return e+="&units=metric",await(await fetch(e)).json()}(n),a=await async function(n){const e=new Map,t=await async function(n){let e=k.replace("cityName",n);return e+="&units=metric",await(await fetch(e)).json()}(n);for(const n of t.list){let t=new Date(1e3*n.dt).getDate();e.get(t)?(e.get(t).minTemp>n.main.temp_min&&(e.get(t).minTemp=n.main.temp_min),e.get(t).maxTemp<n.main.temp_max&&(e.get(t).maxTemp=n.main.temp_max)):e.set(t,{minTemp:n.main.temp_min,maxTemp:n.main.temp_max})}return e}(n),o=(new Date).getDate(),i={},r={},s={};a.forEach(((n,e)=>{let t=e-o;0===t?(i.minTemp=Math.round(n.minTemp),i.maxTemp=Math.round(n.maxTemp)):1===t?(r.minTemp=Math.round(n.minTemp),r.maxTemp=Math.round(n.maxTemp)):2===t&&(s.minTemp=Math.round(n.minTemp),s.maxTemp=Math.round(n.maxTemp))})),t=y(n,Math.round(A.main.temp),A.weather[0].main,[i,r,s])}else"addCityPage"===n?t=function(){const n=document.createElement("div");n.className="add-page";const e=document.createElement("button");e.innerHTML=o,e.addEventListener("click",(()=>{T("homepage")}));const t=document.createElement("h1");t.textContent="Add a City";const A=document.createElement("div");return A.className="cities",n.append(e,t,function(){const n=document.createElement("form");n.addEventListener("submit",(n=>{n.preventDefault(),T("homepage",document.querySelector("input").value)}));const e=document.createElement("div");e.className="head";const t=document.createElement("input");return t.setAttribute("type","search"),console.log(t),e.append(t),e.innerHTML+="\n"+i,n.append(e),n}(),A),n}():"settingsPage"===n&&(t=function(){const n=document.createElement("div");n.className="wrapper";const e=document.createElement("button");e.innerHTML=o,e.addEventListener("click",(()=>{T("homepage")}));const t=document.createElement("h1");return t.textContent="Check back soon!",n.append(e,t),n}());document.body.append(t)}E("homepage","Cairo");const T=E})();var a=A.Z;export{a as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,